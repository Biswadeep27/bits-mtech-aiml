# This is the template for spellcorrection's default configuration. When spellcorrection is
# imported, it looks for a configuration file at $SPELLCORRECTION_HOME/spellcorrection.cfg. If
# it doesn't exist, spellcorrection uses this template to generate it by replacing
# variables in curly braces with their global values from configuration.py.

# Users should not modify this file; they should customize the generated
# spellcorrection.cfg instead.


# ----------------------- TEMPLATE BEGINS HERE -----------------------

[core]
# The folder where your spellcorrection pipelines live, most likely a
# subfolder in a code repository. This path must be absolute.
config_path = {SPELLCORRECTION_HOME}

# webserver log path
log_path = {SPELLCORRECTION_HOME}/logs

# Format of Log line
log_format = [%%(asctime)s] {{%%(filename)s:%%(lineno)d}} %%(levelname)s - %%(message)s



[backend]
#the default model used by the backend to check and correct spelling of user input text/file
# expected values : `classic`, 'pyspellchecker', 'language_tool'
# select classic if you want to use the probabilistic model
model_type = classic

# path to corpus file. Only needed is the model_type is `classic`
corpus_path = {SPELLCORRECTION_HOME}/data/spam_txt_msg_20170820.csv

# file upload path
# when users upload text file from the UI, it is stored on this path to provide as input for the NLP model.
file_upload_path = {SPELLCORRECTION_HOME}/upload

#file path backend where the file is stored after spelling correctio
corrected_file_path = {SPELLCORRECTION_HOME}/output


[webserver]
#spellcorrection webserver backend for user interface - built with Flask
#flask app name for the spellcorrection webserver backend
instance_name = SpellCorrection

#base url for sparkway webapp endpoint
base_url = http://localhost:8080

#webserver backend - flask - gunicorn
# webserver hostname
web_server_host =

#webserver port number
web_server_port = 